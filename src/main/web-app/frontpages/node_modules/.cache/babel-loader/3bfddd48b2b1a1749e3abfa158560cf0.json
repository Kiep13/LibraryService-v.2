{"ast":null,"code":"import axios from \"axios\";\nexport default class LibraryService {\n  constructor() {\n    this._urlBase = \"http://localhost:8080/\";\n\n    this.getAllGenres = async () => {\n      let genres = [];\n      await axios.get(`${this._urlBase}genres`).then(response => {\n        if (response.data != null) {\n          genres = response.data;\n        }\n      });\n      return genres;\n    };\n\n    this.getAllAuthors = async () => {\n      let authors = [];\n      await axios.get(`${this._urlBase}authors`).then(response => {\n        if (response.data != null) {\n          authors = response.data;\n        }\n      });\n      return authors;\n    };\n\n    this.getAllPublishers = async () => {\n      let publishers = [];\n      axios.get(`${this._urlBase}publishers`).then(response => {\n        if (response.data != null) {\n          publishers = response.data;\n        }\n      });\n      console.log(publishers);\n      return publishers;\n    };\n\n    this.addGenre = async genre => {\n      let result = false;\n      await axios.post(`${this._urlBase}genre-add`, genre).then(response => {\n        if (result.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addAuthor = async author => {\n      let result = false;\n      await axios.post(`${this._urlBase}author-add`, author).then(response => {\n        if (response.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addPublisher = async publisher => {\n      let result = false;\n      await axios.post(`${this._urlBase}publisher-add`, publisher).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.editGenre = async genre => {\n      let result = false;\n      await axios.put(`${this._urlBase}genre-edit`, genre).then(responce => {\n        if (responce.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editAuthor = async author => {\n      let result = false;\n      await axios.put(`${this._urlBase}author-edit`, author).then(response => {\n        if (response.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editPublisher = async publisher => {\n      let result = false;\n      await axios.put(`${this._urlBase}publisher-edit`, publisher).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteGenre = async id => {\n      let result = false;\n      await axios.delete(`http://localhost:8080/genre-delete/${id}`).then(response => {\n        if (response.data === \"\") {\n          response = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteAuthor = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}author-delete/${id}`).then(response => {\n        if (response.data === \"\") {\n          response = true;\n        }\n      });\n      return result;\n    };\n\n    this.deletePublisher = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}publisher-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n  }\n\n}\n;","map":{"version":3,"sources":["D:/libraryservice/frontpages/src/services/library-service.js"],"names":["axios","LibraryService","_urlBase","getAllGenres","genres","get","then","response","data","getAllAuthors","authors","getAllPublishers","publishers","console","log","addGenre","genre","result","post","addAuthor","author","addPublisher","publisher","editGenre","put","responce","editAuthor","editPublisher","deleteGenre","id","delete","deleteAuthor","deletePublisher"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class LibraryService {\r\n\r\n    _urlBase = \"http://localhost:8080/\";\r\n\r\n    getAllGenres  = async () => {\r\n        let genres = [];\r\n\r\n        await axios.get(`${this._urlBase}genres`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    genres = response.data;\r\n                }\r\n            });\r\n        \r\n        return genres;\r\n    };\r\n\r\n    getAllAuthors =  async () => {\r\n        let authors = [];\r\n\r\n        await  axios.get(`${this._urlBase}authors`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    authors = response.data;\r\n                }\r\n            });\r\n\r\n        return authors;\r\n    };\r\n\r\n    getAllPublishers = async() => {\r\n        let publishers = [];\r\n\r\n        axios.get(`${this._urlBase}publishers`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    publishers = response.data;\r\n                }\r\n            });\r\n        console.log(publishers);\r\n\r\n        return publishers;\r\n    };\r\n\r\n\r\n\r\n    addGenre = async (genre) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}genre-add`, genre)\r\n            .then(response => {\r\n                if(result.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addAuthor = async (author) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}author-add`, author)\r\n            .then(response => {\r\n                if(response.data === \"\") {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addPublisher = async (publisher) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}publisher-add`, publisher)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    editGenre = async (genre) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}genre-edit`, genre)\r\n            .then(responce => {\r\n                if(responce.data === \"\") {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editAuthor = async (author) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}author-edit`, author)\r\n            .then((response => {\r\n                if(response.data === \"\") {\r\n                    result = true;\r\n                }\r\n            }));\r\n\r\n        return result;\r\n    };\r\n\r\n    editPublisher = async (publisher) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}publisher-edit`, publisher)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    deleteGenre = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`http://localhost:8080/genre-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data === \"\") {\r\n                    response = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteAuthor = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}author-delete/${id}`)\r\n            .then(response => {\r\n                if (response.data === \"\") {\r\n                    response = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deletePublisher = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}publisher-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}