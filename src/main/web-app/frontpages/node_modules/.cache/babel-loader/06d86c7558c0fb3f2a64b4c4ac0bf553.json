{"ast":null,"code":"var _jsxFileName = \"D:\\\\libraryservice\\\\frontpages\\\\src\\\\components\\\\books-page\\\\books-page.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../header\";\nimport Spinner from \"../spinner\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { booksRequested, booksLoaded, booksError, booksUpdateAddTitleField, booksUpdateAddAuthorField, booksUpdateAddGenreField, booksUpdateAddYearField, booksUpdateAddPublisherField, booksUpdateAddPagesField, booksUpdateEditTitleField, booksUpdateEditAuthorField, booksUpdateEditGenreField, booksUpdateEditYearField, booksUpdateEditPublisherField, booksUpdateEditPagesField, booksUpdateSelectedItem } from \"../../actions/books-actions\";\nimport { authorsLoaded } from \"../../actions/authors-actions\";\nimport { genresLoaded } from \"../../actions/genres-actions\";\nimport { publishersLoaded } from \"../../actions/publishers-actions\";\n\nclass BooksPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getAllAuthors = async () => {\n      await axios.get(\"http://localhost:8080/authors\").then(response => {\n        if (response.data != null) {\n          this.props.onLoadedAuthors(response.data);\n        }\n      });\n    };\n\n    this.getAllGenres = async () => {\n      await axios.get(\"http://localhost:8080/genres\").then(response => {\n        if (response.data != null) {\n          this.props.onLoadedGenres(response.data);\n        }\n      });\n    };\n\n    this.getAllPublishers = async () => {\n      await axios.get(\"http://localhost:8080/publishers\").then(response => {\n        if (response.data != null) {\n          this.props.onLoadedPublishers(response.data);\n        }\n      });\n    };\n\n    this.getAllBooks = async () => {\n      await axios.get(\"http://localhost:8080/books\").then(response => {\n        if (response.data != null) {\n          this.props.onLoaded(response.data);\n        }\n      });\n    };\n\n    this.findAuthor = id => {\n      return this.state.authors.find(el => el.id === +id);\n    };\n\n    this.findGenre = id => {\n      return this.state.genres.find(el => el.id === +id);\n    };\n\n    this.findPublisher = id => {\n      return this.state.publishers.find(el => el.id === +id);\n    };\n\n    this.onAddTitle = event => {\n      event.preventDefault();\n      this.props.changeAddTitle(event.target.value);\n    };\n\n    this.onAddAuthor = event => {\n      event.preventDefault();\n      this.props.changeAddAuthor(this.findAuthor(event.target.value));\n    };\n\n    this.onAddGenre = event => {\n      event.preventDefault();\n      this.props.changeAddGenre(this.findGenre(event.target.value));\n    };\n\n    this.onAddPublisher = event => {\n      event.preventDefault();\n      this.props.changeAddPublisher(this.findPublisher(event.target.value));\n    };\n\n    this.onAddYear = event => {\n      this.setState({ ...this.state,\n        addBook: { ...this.state.addBook,\n          addYear: event.target.value\n        }\n      });\n    };\n\n    this.onAddAmountOfPages = event => {\n      this.setState({ ...this.state,\n        addBook: { ...this.state.addBook,\n          addAmountOfPages: event.target.value\n        }\n      });\n    };\n\n    this.onEditTitle = event => {\n      this.setState({ ...this.state,\n        editBook: { ...this.state.editBook,\n          editTitle: event.target.value\n        }\n      });\n    };\n\n    this.onEditAuthor = event => {\n      this.setState({ ...this.state,\n        editBook: { ...this.state.editBook,\n          editAuthor: this.findAuthor(event.target.value)\n        }\n      });\n    };\n\n    this.onEditGenre = event => {\n      this.setState({ ...this.state,\n        editBook: { ...this.state.editBook,\n          editGenre: this.findGenre(event.target.value)\n        }\n      });\n    };\n\n    this.onEditPublisher = event => {\n      this.setState({ ...this.state,\n        editBook: { ...this.state.editBook,\n          editPublisher: this.findPublisher(event.target.value)\n        }\n      });\n    };\n\n    this.onEditYear = event => {\n      this.setState({ ...this.state,\n        editBook: { ...this.state.editBook,\n          editYear: event.target.value\n        }\n      });\n    };\n\n    this.onEditAmountOfPages = event => {\n      this.setState({ ...this.state,\n        editBook: { ...this.state.editBook,\n          editAmountOfPages: event.target.value\n        }\n      });\n    };\n\n    this.onAddBook = async event => {\n      event.preventDefault();\n      const book = {\n        title: this.state.addBook.addTitle,\n        author: this.state.addBook.addAuthor,\n        genre: this.state.addBook.addGenre,\n        year: +this.state.addBook.addYear,\n        publisher: this.state.addBook.addPublisher,\n        amount_pages: +this.state.addBook.addAmountOfPages\n      };\n      console.log(book);\n      await axios.post(\"http://localhost:8080/book-add\", book).then(response => {\n        if (response.data != null) {\n          this.setState({ ...this.state,\n            addBook: {\n              addTitle: \"\",\n              addAuthor: this.state.authors[0],\n              addGenre: this.state.genres[0],\n              addYear: \"\",\n              addPublisher: this.state.publishers[0],\n              addAmountOfPages: \"\"\n            }\n          });\n        }\n      });\n      this.getAllBooks();\n    };\n\n    this.onEditBook = async event => {\n      event.preventDefault();\n      const {\n        editTitle,\n        editAuthor,\n        editGenre,\n        editYear,\n        editPublisher,\n        editAmountOfPages\n      } = this.state.editBook;\n      const book = {\n        id: this.state.selectedItem,\n        title: editTitle,\n        author: editAuthor,\n        genre: editGenre,\n        year: +editYear,\n        publisher: editPublisher,\n        amount_pages: +editAmountOfPages\n      };\n      console.log(book);\n      await axios.put(\"http://localhost:8080/book-edit\", book).then(response => {\n        if (response.data != null) {}\n      });\n      this.getAllBooks();\n    };\n\n    this.onDeleteBook = async event => {\n      event.preventDefault();\n\n      if (this.state.selectedItem != null) {\n        await axios.delete(`http://localhost:8080/book-delete/${this.state.selectedItem}`).then(response => {\n          if (response.data != null) {\n            this.setState({ ...this.state,\n              editBook: {\n                editTitle: \"\",\n                editAuthor: {},\n                editGenre: {},\n                editYear: \"\",\n                editPublisher: {},\n                editAmountOfPages: \"\"\n              },\n              selectedItem: null\n            });\n          }\n        });\n        this.getAllBooks();\n      }\n    };\n\n    this.selectedRow = book => {\n      const {\n        id,\n        title,\n        author,\n        genre,\n        year,\n        publisher,\n        amount_pages\n      } = book;\n      this.setState({ ...this.state,\n        editBook: {\n          editTitle: title,\n          editAuthor: author,\n          editGenre: genre,\n          editYear: year,\n          editPublisher: publisher,\n          editAmountOfPages: amount_pages\n        },\n        selectedItem: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRequest();\n    this.getAllAuthors();\n    this.getAllGenres();\n    this.getAllPublishers();\n    this.getAllBooks();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const authors = this.state.authors.map(({\n      id,\n      surname,\n      name,\n      patronymic\n    }) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, surname, \" \", name, \" \", patronymic);\n    });\n    const genres = this.state.genres.map(({\n      id,\n      name\n    }) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }, name);\n    });\n    const publishers = this.state.publishers.map(({\n      id,\n      publisher\n    }) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      }, publisher);\n    });\n    const rows = this.state.books.map(el => {\n      const {\n        id,\n        title,\n        author,\n        genre,\n        year,\n        publisher,\n        amount_pages\n      } = el;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"object_id\",\n        value: id,\n        onClick: () => {\n          this.selectedRow(el);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }, title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }, author.surname, \" \", author.name, \" \", author.patronymic), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      }, genre.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }\n      }, year), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, publisher.publisher), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }, amount_pages));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      role: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container genres-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }, \"Books\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger float-right my-1 item-control\",\n      onClick: this.onDeleteBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn-outline-warning float-right my-1 item-control\",\n      \"data-toggle\": \"collapse\",\n      href: \"#edit-book-block\",\n      role: \"button\",\n      \"aria-expanded\": \"false\",\n      \"aria-controls\": \"collapseExample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn-outline-success float-right my-1 item-control\",\n      \"data-toggle\": \"collapse\",\n      href: \"#add-book-block\",\n      role: \"button\",\n      \"aria-expanded\": \"false\",\n      \"aria-controls\": \"collapseExample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collapse\",\n      id: \"add-book-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onAddBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write title of new book here...\",\n      className: \"form-control mb-2\",\n      onChange: this.onAddTitle,\n      value: this.state.addBook.addTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown home-dropdown d-inline-block home-ldropdown mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"add-author-list\",\n      onChange: this.onAddAuthor,\n      value: this.state.addBook.addAuthor.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 45\n      }\n    }, authors)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown home-dropdown d-inline-block home-ldropdown mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"add-genre-list\",\n      onChange: this.onAddGenre,\n      value: this.state.addBook.addGenre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 45\n      }\n    }, genres)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown home-dropdown d-inline-block home-ldropdown mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"add-publisher-list\",\n      onChange: this.onAddPublisher,\n      value: this.state.addBook.addPublisher.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 45\n      }\n    }, publishers)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write year of new book here...\",\n      className: \"form-control mb-2\",\n      onChange: this.onAddYear,\n      value: this.state.addBook.addYear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write amount of pages of new book here...\",\n      className: \"form-control mb-2\",\n      onChange: this.onAddAmountOfPages,\n      value: this.state.addBook.addAmountOfPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-info auth-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 41\n      }\n    }, \"Add\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collapse\",\n      id: \"edit-book-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onEditBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write title of new book here...\",\n      className: \"form-control mb-2\",\n      onChange: this.onEditTitle,\n      value: this.state.editBook.editTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown home-dropdown d-inline-block home-ldropdown mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"edit-author-list\",\n      onChange: this.onEditAuthor,\n      value: this.state.editBook.editAuthor.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 45\n      }\n    }, authors)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown home-dropdown d-inline-block home-ldropdown mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"edit-genre-list\",\n      onChange: this.onEditGenre,\n      value: this.state.editBook.editGenre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 45\n      }\n    }, genres)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown home-dropdown d-inline-block home-ldropdown mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"edit-publisher-list\",\n      onChange: this.onEditPublisher,\n      value: this.state.editBook.editPublisher.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 45\n      }\n    }, publishers)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write year of new book here...\",\n      className: \"form-control mb-2\",\n      onChange: this.onEditYear,\n      value: this.state.editBook.editYear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write amount of pages of new book here...\",\n      className: \"form-control mb-2\",\n      onChange: this.onEditAmountOfPages,\n      value: this.state.editBook.editAmountOfPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-info auth-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 41\n      }\n    }, \"Update\"))))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 33\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 33\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 33\n      }\n    }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 33\n      }\n    }, \"Genre\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 33\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 33\n      }\n    }, \"Publisher\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 33\n      }\n    }, \"Amount of pages\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 29\n      }\n    }, rows)))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  authorsList,\n  genresList,\n  publishersList,\n  booksList\n}) => {\n  return {\n    books: booksList.books,\n    loading: booksList.loading,\n    error: booksList.error,\n    authors: authorsList.authors,\n    genres: genresList.genres,\n    publishers: publishersList.publishers,\n    addBook: booksList.addBook,\n    editBook: booksList.editBook,\n    selectedItem: booksList.selectedItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRequest: () => {\n      dispatch(booksRequested());\n    },\n    onLoadedAuthors: newAuthors => {\n      dispatch(authorsLoaded(newAuthors));\n    },\n    onLoadedGenres: newGenres => {\n      dispatch(genresLoaded(newGenres));\n    },\n    onLoadedPublishers: newPublishers => {\n      dispatch(publishersLoaded(newPublishers));\n    },\n    onLoaded: newBooks => {\n      dispatch(booksLoaded(newBooks));\n    },\n    changeAddTitle: value => {\n      dispatch(booksUpdateAddTitleField(value));\n    },\n    changeAddAuthor: value => {\n      dispatch(booksUpdateAddAuthorField(value));\n    },\n    changeAddGenre: value => {\n      dispatch(booksUpdateAddGenreField(value));\n    },\n    changeAddYear: value => {\n      dispatch(booksUpdateAddYearField(value));\n    },\n    changeAddPublisher: value => {\n      dispatch(booksUpdateAddPublisherField(value));\n    },\n    changeAddPages: value => {\n      dispatch(booksUpdateAddPagesField(value));\n    },\n    changeEditTitle: value => {\n      dispatch(booksUpdateEditTitleField(value));\n    },\n    changeEditAuthor: value => {\n      dispatch(booksUpdateEditAuthorField(value));\n    },\n    changeEditGenre: value => {\n      dispatch(booksUpdateEditGenreField(value));\n    },\n    changeEditYear: value => {\n      dispatch(booksUpdateEditYearField(value));\n    },\n    changeEditPublisher: value => {\n      dispatch(booksUpdateEditPublisherField(value));\n    },\n    changeEditPages: value => {\n      dispatch(booksUpdateEditPagesField(value));\n    },\n    changeItem: item => {\n      dispatch(booksUpdateSelectedItem(item));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksPage);","map":{"version":3,"sources":["D:/libraryservice/frontpages/src/components/books-page/books-page.js"],"names":["React","Component","Header","Spinner","axios","connect","booksRequested","booksLoaded","booksError","booksUpdateAddTitleField","booksUpdateAddAuthorField","booksUpdateAddGenreField","booksUpdateAddYearField","booksUpdateAddPublisherField","booksUpdateAddPagesField","booksUpdateEditTitleField","booksUpdateEditAuthorField","booksUpdateEditGenreField","booksUpdateEditYearField","booksUpdateEditPublisherField","booksUpdateEditPagesField","booksUpdateSelectedItem","authorsLoaded","genresLoaded","publishersLoaded","BooksPage","getAllAuthors","get","then","response","data","props","onLoadedAuthors","getAllGenres","onLoadedGenres","getAllPublishers","onLoadedPublishers","getAllBooks","onLoaded","findAuthor","id","state","authors","find","el","findGenre","genres","findPublisher","publishers","onAddTitle","event","preventDefault","changeAddTitle","target","value","onAddAuthor","changeAddAuthor","onAddGenre","changeAddGenre","onAddPublisher","changeAddPublisher","onAddYear","setState","addBook","addYear","onAddAmountOfPages","addAmountOfPages","onEditTitle","editBook","editTitle","onEditAuthor","editAuthor","onEditGenre","editGenre","onEditPublisher","editPublisher","onEditYear","editYear","onEditAmountOfPages","editAmountOfPages","onAddBook","book","title","addTitle","author","addAuthor","genre","addGenre","year","publisher","addPublisher","amount_pages","console","log","post","onEditBook","selectedItem","put","onDeleteBook","delete","selectedRow","componentDidMount","onRequest","render","loading","map","surname","name","patronymic","rows","books","mapStateToProps","authorsList","genresList","publishersList","booksList","error","mapDispatchToProps","dispatch","newAuthors","newGenres","newPublishers","newBooks","changeAddYear","changeAddPages","changeEditTitle","changeEditAuthor","changeEditGenre","changeEditYear","changeEditPublisher","changeEditPages","changeItem","item"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport Header from \"../header\";\r\nimport Spinner from \"../spinner\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    booksRequested,\r\n    booksLoaded,\r\n    booksError,\r\n    booksUpdateAddTitleField,\r\n    booksUpdateAddAuthorField,\r\n    booksUpdateAddGenreField,\r\n    booksUpdateAddYearField,\r\n    booksUpdateAddPublisherField,\r\n    booksUpdateAddPagesField,\r\n    booksUpdateEditTitleField,\r\n    booksUpdateEditAuthorField,\r\n    booksUpdateEditGenreField,\r\n    booksUpdateEditYearField,\r\n    booksUpdateEditPublisherField,\r\n    booksUpdateEditPagesField,\r\n    booksUpdateSelectedItem\r\n} from \"../../actions/books-actions\";\r\nimport {authorsLoaded} from \"../../actions/authors-actions\";\r\nimport {genresLoaded} from \"../../actions/genres-actions\";\r\nimport {publishersLoaded} from \"../../actions/publishers-actions\";\r\n\r\nclass BooksPage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onRequest();\r\n        this.getAllAuthors();\r\n        this.getAllGenres();\r\n        this.getAllPublishers();\r\n        this.getAllBooks();\r\n    }\r\n\r\n    getAllAuthors = async () => {\r\n        await axios.get(\"http://localhost:8080/authors\")\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.props.onLoadedAuthors(response.data)\r\n                }\r\n            })\r\n    };\r\n\r\n    getAllGenres = async () => {\r\n        await axios.get(\"http://localhost:8080/genres\")\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.props.onLoadedGenres(response.data)\r\n                }\r\n            })\r\n    };\r\n\r\n    getAllPublishers = async () => {\r\n        await axios.get(\"http://localhost:8080/publishers\")\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    this.props.onLoadedPublishers(response.data)\r\n                }\r\n            })\r\n    };\r\n\r\n    getAllBooks = async () => {\r\n        await axios.get(\"http://localhost:8080/books\")\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    this.props.onLoaded(response.data)\r\n                }\r\n            })\r\n    };\r\n\r\n    findAuthor = (id) => {\r\n        return this.state.authors.find((el) => el.id === +id);\r\n    };\r\n\r\n    findGenre = (id) => {\r\n        return this.state.genres.find((el) => el.id === +id);\r\n    };\r\n\r\n    findPublisher = (id) => {\r\n        return this.state.publishers.find((el) => el.id === +id);\r\n    };\r\n\r\n    onAddTitle = event => {\r\n        event.preventDefault();\r\n        this.props.changeAddTitle(event.target.value);\r\n    };\r\n\r\n    onAddAuthor = event => {\r\n        event.preventDefault();\r\n        this.props.changeAddAuthor(this.findAuthor(event.target.value));\r\n    };\r\n\r\n    onAddGenre = event => {\r\n        event.preventDefault();\r\n        this.props.changeAddGenre(this.findGenre(event.target.value));\r\n    };\r\n\r\n    onAddPublisher= event => {\r\n        event.preventDefault();\r\n        this.props.changeAddPublisher(this.findPublisher(event.target.value));\r\n    };\r\n\r\n    onAddYear= event => {\r\n        this.setState({\r\n            ...this.state,\r\n            addBook : {\r\n                ...this.state.addBook,\r\n                addYear : event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    onAddAmountOfPages = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            addBook : {\r\n                ...this.state.addBook,\r\n                addAmountOfPages : event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditTitle = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                ...this.state.editBook,\r\n                editTitle : event.target.value,\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditAuthor = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                ...this.state.editBook,\r\n                editAuthor : this.findAuthor(event.target.value)\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditGenre = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                ...this.state.editBook,\r\n                editGenre : this.findGenre(event.target.value)\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditPublisher= event => {\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                ...this.state.editBook,\r\n                editPublisher : this.findPublisher(event.target.value)\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditYear= event => {\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                ...this.state.editBook,\r\n                editYear : event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditAmountOfPages = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                ...this.state.editBook,\r\n                editAmountOfPages : event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    onAddBook = async event => {\r\n        event.preventDefault();\r\n\r\n        const book = {\r\n            title : this.state.addBook.addTitle,\r\n            author : this.state.addBook.addAuthor,\r\n            genre : this.state.addBook.addGenre,\r\n            year : +this.state.addBook.addYear,\r\n            publisher : this.state.addBook.addPublisher,\r\n            amount_pages : +this.state.addBook.addAmountOfPages\r\n        };\r\n\r\n        console.log(book);\r\n\r\n        await axios.post(\"http://localhost:8080/book-add\", book)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\r\n                        ...this.state,\r\n                        addBook : {\r\n                            addTitle : \"\",\r\n                            addAuthor : this.state.authors[0],\r\n                            addGenre : this.state.genres[0],\r\n                            addYear : \"\",\r\n                            addPublisher : this.state.publishers[0],\r\n                            addAmountOfPages : \"\"\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n\r\n        this.getAllBooks();\r\n    };\r\n\r\n    onEditBook = async event => {\r\n        event.preventDefault();\r\n\r\n        const { editTitle, editAuthor, editGenre, editYear, editPublisher, editAmountOfPages} = this.state.editBook;\r\n\r\n        const book = {\r\n            id : this.state.selectedItem,\r\n            title : editTitle,\r\n            author : editAuthor,\r\n            genre : editGenre,\r\n            year : +editYear,\r\n            publisher : editPublisher,\r\n            amount_pages : +editAmountOfPages\r\n        };\r\n\r\n        console.log(book);\r\n\r\n        await axios.put(\"http://localhost:8080/book-edit\", book)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                }\r\n            });\r\n\r\n        this.getAllBooks();\r\n    };\r\n\r\n    onDeleteBook = async event => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.selectedItem != null) {\r\n            await axios.delete(`http://localhost:8080/book-delete/${this.state.selectedItem}`)\r\n                .then(response => {\r\n                    if(response.data != null) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            editBook : {\r\n                                editTitle : \"\",\r\n                                editAuthor : {},\r\n                                editGenre : {},\r\n                                editYear : \"\",\r\n                                editPublisher : {},\r\n                                editAmountOfPages : \"\"\r\n                            },\r\n                            selectedItem : null\r\n                        })\r\n                    }\r\n                });\r\n\r\n            this.getAllBooks();\r\n        }\r\n    };\r\n\r\n    selectedRow = (book) => {\r\n\r\n        const {id, title, author, genre, year, publisher, amount_pages} = book;\r\n        this.setState({\r\n            ...this.state,\r\n            editBook : {\r\n                editTitle : title,\r\n                editAuthor : author,\r\n                editGenre : genre,\r\n                editYear : year,\r\n                editPublisher : publisher,\r\n                editAmountOfPages : amount_pages\r\n            },\r\n            selectedItem : id\r\n        })\r\n    };\r\n\r\n    render () {\r\n\r\n        if(this.state.loading){\r\n            return <Spinner/>\r\n        }\r\n\r\n        const authors = this.state.authors.map(({id, surname, name, patronymic} )=> {\r\n            return (\r\n                <option key={id} value={id}>{surname} {name} {patronymic}</option>\r\n            )\r\n        });\r\n\r\n        const genres = this.state.genres.map(({id, name}) => {\r\n            return (\r\n                <option key={id} value={id}>{name}</option>\r\n            )\r\n        });\r\n\r\n        const publishers = this.state.publishers.map(({id, publisher}) => {\r\n            return (\r\n                <option key={id} value={id}>{publisher}</option>\r\n            )\r\n        });\r\n\r\n        const rows = this.state.books.map((el) => {\r\n\r\n            const {id, title, author, genre, year, publisher, amount_pages} = el;\r\n\r\n            return (\r\n                <tr key={id}>\r\n                    <td><input type=\"radio\" name=\"object_id\" value={id} onClick={() => {this.selectedRow(el)}}/></td>\r\n                    <td>{title}</td>\r\n                    <td>{author.surname} {author.name} {author.patronymic}</td>\r\n                    <td>{genre.name}</td>\r\n                    <td>{year}</td>\r\n                    <td>{publisher.publisher}</td>\r\n                    <td>{amount_pages}</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n\r\n                <main role=\"main\">\r\n\r\n                    <div className=\"container genres-page\">\r\n                        <h1>Books</h1>\r\n\r\n                        <div className=\"genres-tools\">\r\n                            <button className=\"btn btn-outline-danger float-right my-1 item-control\" onClick={this.onDeleteBook}>\r\n                                <i className=\"fa fa-trash-o\"/>\r\n                            </button>\r\n\r\n                            <a className=\"btn btn-outline-warning float-right my-1 item-control\" data-toggle=\"collapse\" href=\"#edit-book-block\" role=\"button\"\r\n                               aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                                <i className=\"fa fa-pencil\"/>\r\n                            </a>\r\n\r\n                            <a className=\"btn btn-outline-success float-right my-1 item-control\" data-toggle=\"collapse\" href=\"#add-book-block\" role=\"button\"\r\n                               aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                                <i className=\"fa fa-plus\"/>\r\n                            </a>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <br/>\r\n\r\n                        <div className=\"collapse\" id=\"add-book-block\">\r\n                            <div className=\"card card-body mb-2\">\r\n                                <form onSubmit={this.onAddBook}>\r\n                                    <div className=\"genre-form\">\r\n                                        <input type=\"text\" placeholder=\"Write title of new book here...\" className=\"form-control mb-2\" onChange={this.onAddTitle} value={this.state.addBook.addTitle}/>\r\n                                        <div className=\"dropdown home-dropdown d-inline-block home-ldropdown mb-2\">\r\n                                            <select id=\"add-author-list\" onChange={this.onAddAuthor} value={this.state.addBook.addAuthor.id}>\r\n                                                {authors}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"dropdown home-dropdown d-inline-block home-ldropdown mb-2\">\r\n                                            <select id=\"add-genre-list\" onChange={this.onAddGenre} value={this.state.addBook.addGenre.id}>\r\n                                                {genres}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"dropdown home-dropdown d-inline-block home-ldropdown mb-2\">\r\n                                            <select id=\"add-publisher-list\" onChange={this.onAddPublisher} value={this.state.addBook.addPublisher.id}>\r\n                                                {publishers}\r\n                                            </select>\r\n                                        </div>\r\n                                        <input type=\"text\" placeholder=\"Write year of new book here...\" className=\"form-control mb-2\" onChange={this.onAddYear} value={this.state.addBook.addYear}/>\r\n                                        <input type=\"text\" placeholder=\"Write amount of pages of new book here...\" className=\"form-control mb-2\" onChange={this.onAddAmountOfPages} value={this.state.addBook.addAmountOfPages}/>\r\n                                        <button type=\"submit\" className=\"btn btn-info auth-button\">Add</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"collapse\" id=\"edit-book-block\">\r\n                            <div className=\"card card-body mb-2\">\r\n                                <form onSubmit={this.onEditBook}>\r\n                                    <div className=\"genre-form\">\r\n                                        <input type=\"text\" placeholder=\"Write title of new book here...\" className=\"form-control mb-2\" onChange={this.onEditTitle} value={this.state.editBook.editTitle}/>\r\n                                        <div className=\"dropdown home-dropdown d-inline-block home-ldropdown mb-2\">\r\n                                            <select id=\"edit-author-list\" onChange={this.onEditAuthor} value={this.state.editBook.editAuthor.id}>\r\n                                                {authors}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"dropdown home-dropdown d-inline-block home-ldropdown mb-2\">\r\n                                            <select id=\"edit-genre-list\" onChange={this.onEditGenre} value={this.state.editBook.editGenre.id}>\r\n                                                {genres}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"dropdown home-dropdown d-inline-block home-ldropdown mb-2\">\r\n                                            <select id=\"edit-publisher-list\" onChange={this.onEditPublisher} value={this.state.editBook.editPublisher.id}>\r\n                                                {publishers}\r\n                                            </select>\r\n                                        </div>\r\n                                        <input type=\"text\" placeholder=\"Write year of new book here...\" className=\"form-control mb-2\" onChange={this.onEditYear} value={this.state.editBook.editYear}/>\r\n                                        <input type=\"text\" placeholder=\"Write amount of pages of new book here...\" className=\"form-control mb-2\" onChange={this.onEditAmountOfPages} value={this.state.editBook.editAmountOfPages}/>\r\n                                        <button type=\"submit\" className=\"btn btn-info auth-button\">Update</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Title</th>\r\n                                <th>Author</th>\r\n                                <th>Genre</th>\r\n                                <th>Year</th>\r\n                                <th>Publisher</th>\r\n                                <th>Amount of pages</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {rows}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({authorsList, genresList, publishersList, booksList}) => {\r\n    return {\r\n        books : booksList.books,\r\n        loading : booksList.loading,\r\n        error : booksList.error,\r\n        authors : authorsList.authors,\r\n        genres : genresList.genres,\r\n        publishers : publishersList.publishers,\r\n        addBook : booksList.addBook,\r\n        editBook : booksList.editBook,\r\n        selectedItem : booksList.selectedItem\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onRequest : () => {dispatch(booksRequested())},\r\n        onLoadedAuthors : (newAuthors) => {dispatch(authorsLoaded(newAuthors))},\r\n        onLoadedGenres : (newGenres) => {dispatch(genresLoaded(newGenres))},\r\n        onLoadedPublishers : (newPublishers) => {dispatch(publishersLoaded(newPublishers))},\r\n        onLoaded : (newBooks) => {dispatch(booksLoaded(newBooks))},\r\n        changeAddTitle : (value) => {dispatch(booksUpdateAddTitleField(value))},\r\n        changeAddAuthor : (value) => {dispatch(booksUpdateAddAuthorField(value))},\r\n        changeAddGenre : (value) => {dispatch(booksUpdateAddGenreField(value))},\r\n        changeAddYear : (value) => {dispatch(booksUpdateAddYearField(value))},\r\n        changeAddPublisher : (value) => {dispatch(booksUpdateAddPublisherField(value))},\r\n        changeAddPages : (value) => {dispatch(booksUpdateAddPagesField(value))},\r\n        changeEditTitle : (value) => {dispatch(booksUpdateEditTitleField(value))},\r\n        changeEditAuthor : (value) => {dispatch(booksUpdateEditAuthorField(value))},\r\n        changeEditGenre : (value) => {dispatch(booksUpdateEditGenreField(value))},\r\n        changeEditYear : (value) => {dispatch(booksUpdateEditYearField(value))},\r\n        changeEditPublisher : (value) => {dispatch(booksUpdateEditPublisherField(value))},\r\n        changeEditPages : (value) => {dispatch(booksUpdateEditPagesField(value))},\r\n        changeItem : (item) => {dispatch(booksUpdateSelectedItem(item))}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksPage);"]},"metadata":{},"sourceType":"module"}