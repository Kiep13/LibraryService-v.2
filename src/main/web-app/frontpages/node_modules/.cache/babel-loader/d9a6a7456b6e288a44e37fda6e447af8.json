{"ast":null,"code":"import axios from \"axios\";\nexport default class LibraryService {\n  constructor() {\n    this._urlBase = \"http://localhost:8080/\";\n\n    this.getAllGenres = async () => {\n      let genres = [];\n      await axios.get(`${this._urlBase}genres`).then(response => {\n        if (response.data != null) {\n          genres = response.data;\n        }\n      });\n      return genres;\n    };\n\n    this.getAllAuthors = async () => {\n      let authors = [];\n      await axios.get(`${this._urlBase}authors`).then(response => {\n        if (response.data != null) {\n          authors = response.data;\n        }\n      });\n      return authors;\n    };\n\n    this.getAllPublishers = async () => {\n      let publishers = [];\n      await axios.get(`${this._urlBase}publishers`).then(response => {\n        if (response.data != null) {\n          publishers = response.data;\n        }\n      });\n      return publishers;\n    };\n\n    this.getAllBooks = async () => {\n      let books = [];\n      await axios.get(`${this._urlBase}books`).then(response => {\n        if (response.data != null) {\n          books = response.data;\n        }\n      });\n      return books;\n    };\n\n    this.getAllLibraries = async () => {\n      let libraries = [];\n      await axios.get(`${this._urlBase}libraries`).then(response => {\n        if (response.data != null) {\n          libraries = response.data;\n        }\n      });\n      return libraries;\n    };\n\n    this.getBookFund = async () => {\n      let book_fund = [];\n      await axios.get(`${this._urlBase}bookfund`).then(response => {\n        if (response.data != null) {\n          book_fund = response.data;\n        }\n      });\n      return book_fund;\n    };\n\n    this.addGenre = async genre => {\n      let result = false;\n      await axios.post(`${this._urlBase}genre-add`, genre).then(response => {\n        console.log(response);\n        console.log(response.data);\n\n        if (result.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addAuthor = async author => {\n      let result = false;\n      await axios.post(`${this._urlBase}author-add`, author).then(response => {\n        if (response.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addPublisher = async publisher => {\n      let result = false;\n      await axios.post(`${this._urlBase}publisher-add`, publisher).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.addBook = async book => {\n      let result = false;\n      await axios.post(`${this._urlBase}book-add`, book).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.addLibrary = async library => {\n      let result = false;\n      await axios.post(`${this._urlBase}library-add`, library).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.addBookFund = async bookFund => {\n      let result = false;\n      await axios.post(`${this._urlBase}bookfund-add`, bookFund).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editGenre = async genre => {\n      let result = false;\n      await axios.put(`${this._urlBase}genre-edit`, genre).then(responce => {\n        if (responce.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editAuthor = async author => {\n      let result = false;\n      await axios.put(`${this._urlBase}author-edit`, author).then(response => {\n        if (response.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editPublisher = async publisher => {\n      let result = false;\n      await axios.put(`${this._urlBase}publisher-edit`, publisher).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editBook = async book => {\n      let result = false;\n      await axios.put(`${this._urlBase}book-edit`, book).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editLibrary = async library => {\n      let result = false;\n      await axios.put(`${this._urlBase}library-edit`, library).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editBookFund = async bookFund => {\n      let result = false;\n      await axios.put(`${this._urlBase}bookfund-edit`, bookFund).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteGenre = async id => {\n      let result = false;\n      await axios.delete(`http://localhost:8080/genre-delete/${id}`).then(response => {\n        if (response.data === \"\") {\n          response = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteAuthor = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}author-delete/${id}`).then(response => {\n        if (response.data === \"\") {\n          response = true;\n        }\n      });\n      return result;\n    };\n\n    this.deletePublisher = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}publisher-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteBook = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}book-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteLibrary = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}library-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteBookFund = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}bookfund-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addAdmin = async admin => {\n      let result = false;\n      await axios.post(`${this._urlBase}registration`, admin).then(response => {\n        if (response.status === 201) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.logIn = async admin => {\n      let result = false;\n      await axios.put(`${this._urlBase}log-in`, admin).then(response => {\n        if (response.data.length === 1) {\n          result = true;\n        }\n      });\n      return result;\n    };\n  }\n\n}\n;","map":{"version":3,"sources":["D:/Programming/Spring + React/libraryservice/frontpages/src/services/library-service.js"],"names":["axios","LibraryService","_urlBase","getAllGenres","genres","get","then","response","data","getAllAuthors","authors","getAllPublishers","publishers","getAllBooks","books","getAllLibraries","libraries","getBookFund","book_fund","addGenre","genre","result","post","console","log","addAuthor","author","addPublisher","publisher","addBook","book","addLibrary","library","addBookFund","bookFund","editGenre","put","responce","editAuthor","editPublisher","editBook","editLibrary","editBookFund","deleteGenre","id","delete","deleteAuthor","deletePublisher","deleteBook","deleteLibrary","deleteBookFund","addAdmin","admin","status","logIn","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class LibraryService {\r\n\r\n    _urlBase = \"http://localhost:8080/\";\r\n\r\n    getAllGenres  = async () => {\r\n        let genres = [];\r\n\r\n        await axios.get(`${this._urlBase}genres`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    genres = response.data;\r\n                }\r\n            });\r\n        \r\n        return genres;\r\n    };\r\n\r\n    getAllAuthors =  async () => {\r\n        let authors = [];\r\n\r\n        await  axios.get(`${this._urlBase}authors`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    authors = response.data;\r\n                }\r\n            });\r\n\r\n        return authors;\r\n    };\r\n\r\n    getAllPublishers = async() => {\r\n        let publishers = [];\r\n\r\n        await axios.get(`${this._urlBase}publishers`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    publishers = response.data;\r\n                }\r\n            });\r\n\r\n        return publishers;\r\n    };\r\n\r\n    getAllBooks = async() => {\r\n        let books = [];\r\n\r\n        await axios.get(`${this._urlBase}books`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    books = response.data;\r\n                }\r\n            });\r\n\r\n        return books;\r\n    };\r\n\r\n    getAllLibraries = async () => {\r\n        let libraries = [];\r\n\r\n        await axios.get(`${this._urlBase}libraries`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    libraries = response.data;\r\n                }\r\n            });\r\n\r\n        return libraries;\r\n    };\r\n\r\n    getBookFund = async () => {\r\n        let book_fund = [];\r\n\r\n        await axios.get(`${this._urlBase}bookfund`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    book_fund = response.data;\r\n                }\r\n            });\r\n\r\n        return book_fund;\r\n    };\r\n\r\n\r\n\r\n    addGenre = async (genre) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}genre-add`, genre)\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log(response.data);\r\n                if(result.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addAuthor = async (author) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}author-add`, author)\r\n            .then(response => {\r\n                if(response.data === \"\") {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addPublisher = async (publisher) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}publisher-add`, publisher)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addBook = async (book) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}book-add`, book)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addLibrary = async (library) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}library-add`, library)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addBookFund = async (bookFund) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}bookfund-add`, bookFund)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    editGenre = async (genre) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}genre-edit`, genre)\r\n            .then(responce => {\r\n                if(responce.data === \"\") {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editAuthor = async (author) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}author-edit`, author)\r\n            .then((response => {\r\n                if(response.data === \"\") {\r\n                    result = true;\r\n                }\r\n            }));\r\n\r\n        return result;\r\n    };\r\n\r\n    editPublisher = async (publisher) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}publisher-edit`, publisher)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editBook = async (book) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}book-edit`, book)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editLibrary = async (library) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}library-edit`, library)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editBookFund = async (bookFund) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}bookfund-edit`, bookFund)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    deleteGenre = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`http://localhost:8080/genre-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data === \"\") {\r\n                    response = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteAuthor = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}author-delete/${id}`)\r\n            .then(response => {\r\n                if (response.data === \"\") {\r\n                    response = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deletePublisher = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}publisher-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteBook = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}book-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteLibrary = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}library-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteBookFund = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}bookfund-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addAdmin = async (admin)  => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}registration`, admin)\r\n            .then(response => {\r\n                if(response.status === 201) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    logIn = async (admin) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}log-in`, admin)\r\n            .then(response => {\r\n                if(response.data.length === 1) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}