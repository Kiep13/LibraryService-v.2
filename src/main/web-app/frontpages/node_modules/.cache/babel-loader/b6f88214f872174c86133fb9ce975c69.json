{"ast":null,"code":"import axios from \"axios\";\nexport default class LibraryService {\n  constructor() {\n    this._urlBase = \"http://localhost:8080/\";\n\n    this.getAllGenres = async () => {\n      let genres = [];\n      await axios.get(`${this._urlBase}genres`).then(response => {\n        if (response.data != null) {\n          genres = response.data;\n        }\n      });\n      return genres;\n    };\n\n    this.getAllAuthors = async () => {\n      let authors = [];\n      await axios.get(`${this._urlBase}authors`).then(response => {\n        if (response.data != null) {\n          authors = response.data;\n        }\n      });\n      return authors;\n    };\n\n    this.getAllPublishers = async () => {\n      let publishers = [];\n      await axios.get(`${this._urlBase}publishers`).then(response => {\n        if (response.data != null) {\n          publishers = response.data;\n        }\n      });\n      return publishers;\n    };\n\n    this.getAllBooks = async () => {\n      let books = [];\n      await axios.get(`${this._urlBase}books`).then(response => {\n        if (response.data != null) {\n          books = response.data;\n        }\n      });\n      return books;\n    };\n\n    this.getAllLibraries = async () => {\n      let libraries = [];\n      await axios.get(`${this._urlBase}libraries`).then(response => {\n        if (response.data != null) {\n          libraries = response.data;\n        }\n      });\n      return libraries;\n    };\n\n    this.addGenre = async genre => {\n      let result = false;\n      await axios.post(`${this._urlBase}genre-add`, genre).then(response => {\n        if (result.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addAuthor = async author => {\n      let result = false;\n      await axios.post(`${this._urlBase}author-add`, author).then(response => {\n        if (response.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.addPublisher = async publisher => {\n      let result = false;\n      await axios.post(`${this._urlBase}publisher-add`, publisher).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.addBook = async book => {\n      let result = false;\n      await axios.post(`${this._urlBase}book-add`, book).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.addLibrary = async library => {\n      let result = false;\n      await axios.post(`${this._urlBase}library-add`, book).then(response => {\n        if (response.data != null) {\n          result = response.data;\n        }\n      });\n      return result;\n    };\n\n    this.editGenre = async genre => {\n      let result = false;\n      await axios.put(`${this._urlBase}genre-edit`, genre).then(responce => {\n        if (responce.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editAuthor = async author => {\n      let result = false;\n      await axios.put(`${this._urlBase}author-edit`, author).then(response => {\n        if (response.data === \"\") {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editPublisher = async publisher => {\n      let result = false;\n      await axios.put(`${this._urlBase}publisher-edit`, publisher).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editBook = async book => {\n      let result = false;\n      await axios.put(`${this._urlBase}book-edit`, book).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.editLibrary = async library => {\n      let result = false;\n      await axios.put(`${this._urlBase}library-edit`, library).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteGenre = async id => {\n      let result = false;\n      await axios.delete(`http://localhost:8080/genre-delete/${id}`).then(response => {\n        if (response.data === \"\") {\n          response = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteAuthor = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}author-delete/${id}`).then(response => {\n        if (response.data === \"\") {\n          response = true;\n        }\n      });\n      return result;\n    };\n\n    this.deletePublisher = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}publisher-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteBook = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}book-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n\n    this.deleteLibrary = async id => {\n      let result = false;\n      await axios.delete(`${this._urlBase}library-delete/${id}`).then(response => {\n        if (response.data != null) {\n          result = true;\n        }\n      });\n      return result;\n    };\n  }\n\n}\n;","map":{"version":3,"sources":["D:/libraryservice/frontpages/src/services/library-service.js"],"names":["axios","LibraryService","_urlBase","getAllGenres","genres","get","then","response","data","getAllAuthors","authors","getAllPublishers","publishers","getAllBooks","books","getAllLibraries","libraries","addGenre","genre","result","post","addAuthor","author","addPublisher","publisher","addBook","book","addLibrary","library","editGenre","put","responce","editAuthor","editPublisher","editBook","editLibrary","deleteGenre","id","delete","deleteAuthor","deletePublisher","deleteBook","deleteLibrary"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class LibraryService {\r\n\r\n    _urlBase = \"http://localhost:8080/\";\r\n\r\n    getAllGenres  = async () => {\r\n        let genres = [];\r\n\r\n        await axios.get(`${this._urlBase}genres`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    genres = response.data;\r\n                }\r\n            });\r\n        \r\n        return genres;\r\n    };\r\n\r\n    getAllAuthors =  async () => {\r\n        let authors = [];\r\n\r\n        await  axios.get(`${this._urlBase}authors`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    authors = response.data;\r\n                }\r\n            });\r\n\r\n        return authors;\r\n    };\r\n\r\n    getAllPublishers = async() => {\r\n        let publishers = [];\r\n\r\n        await axios.get(`${this._urlBase}publishers`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    publishers = response.data;\r\n                }\r\n            });\r\n\r\n        return publishers;\r\n    };\r\n\r\n    getAllBooks = async() => {\r\n        let books = [];\r\n\r\n        await axios.get(`${this._urlBase}books`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    books = response.data;\r\n                }\r\n            });\r\n\r\n        return books;\r\n    };\r\n\r\n    getAllLibraries = async() => {\r\n        let libraries = [];\r\n\r\n        await axios.get(`${this._urlBase}libraries`)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    libraries = response.data;\r\n                }\r\n            });\r\n\r\n        return libraries;\r\n    };\r\n\r\n\r\n\r\n    addGenre = async (genre) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}genre-add`, genre)\r\n            .then(response => {\r\n                if(result.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addAuthor = async (author) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}author-add`, author)\r\n            .then(response => {\r\n                if(response.data === \"\") {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addPublisher = async (publisher) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}publisher-add`, publisher)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addBook = async (book) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}book-add`, book)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    addLibrary = async (library) => {\r\n        let result = false;\r\n\r\n        await axios.post(`${this._urlBase}library-add`, book)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = response.data;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    editGenre = async (genre) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}genre-edit`, genre)\r\n            .then(responce => {\r\n                if(responce.data === \"\") {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editAuthor = async (author) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}author-edit`, author)\r\n            .then((response => {\r\n                if(response.data === \"\") {\r\n                    result = true;\r\n                }\r\n            }));\r\n\r\n        return result;\r\n    };\r\n\r\n    editPublisher = async (publisher) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}publisher-edit`, publisher)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editBook = async (book) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}book-edit`, book)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    editLibrary = async (library) => {\r\n        let result = false;\r\n\r\n        await axios.put(`${this._urlBase}library-edit`, library)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    deleteGenre = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`http://localhost:8080/genre-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data === \"\") {\r\n                    response = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteAuthor = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}author-delete/${id}`)\r\n            .then(response => {\r\n                if (response.data === \"\") {\r\n                    response = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deletePublisher = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}publisher-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteBook = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}book-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    deleteLibrary = async (id) => {\r\n        let result = false;\r\n\r\n        await axios.delete(`${this._urlBase}library-delete/${id}`)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n};"]},"metadata":{},"sourceType":"module"}