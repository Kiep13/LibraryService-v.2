{"ast":null,"code":"var _jsxFileName = \"D:\\\\libraryservice\\\\frontpages\\\\src\\\\components\\\\genres-page\\\\genres-page.js\";\nimport React, { Component } from 'react';\nimport './genres-page.css';\nimport Header from '../header';\nimport Spinner from '../spinner';\nimport { Redirect } from 'react-router-dom';\nimport { compose } from \"../../utils\";\nimport { connect } from \"react-redux\";\nimport withLibraryService from \"../../hoc\";\nimport { genresRequested, genresLoaded, genreShowAddWindow, genreShowEditWindow, genreUpdateAddField, genreUpdateEditField, genreUpdateSelectedItem } from \"../../actions/genres-actions\";\n\nclass GenresPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: {\n        addGenre: \"\",\n        editGenre: \"\"\n      },\n      isAddGenreError: false,\n      isEditGenreError: false\n    };\n    this.regExpEng = new RegExp('^[A-Z][a-z]+$');\n    this.regExpRus = new RegExp('^[А-Я][а-я]+$');\n\n    this.getAllGenres = async () => {\n      const {\n        libraryService\n      } = this.props;\n      const genres = await libraryService.getAllGenres();\n      this.props.onLoaded(genres);\n    };\n\n    this.onAddGenreChange = event => {\n      event.preventDefault();\n      const isErrorEng = !this.regExpEng.test(event.target.value);\n      const isErrorRus = !this.regExpRus.test(event.target.value);\n\n      if (isErrorEng || isErrorRus) {\n        this.setState({\n          formError: {\n            addGenre: \"The genre must start with a capital letter and not contain numbers or punctuation marks. Example: romance.\"\n          },\n          isAddGenreError: true\n        });\n      } else {\n        this.setState({\n          formError: {\n            addGenre: \"\"\n          },\n          isAddGenreError: false\n        });\n        this.props.onAddFieldChange(event.target.value);\n      }\n    };\n\n    this.onEditGenreChange = event => {\n      event.preventDefault();\n      this.props.onEditFieldChange(event.target.value);\n    };\n\n    this.onAddButtonClick = async event => {\n      event.preventDefault();\n\n      if (!this.props.isEditWindow) {\n        const value = this.props.isAddWindow;\n        this.props.changeAddWindow(!value);\n      } else {\n        alert(\"You have opened edit window\");\n      }\n    };\n\n    this.onEditButtonClick = async event => {\n      event.preventDefault();\n\n      if (!this.props.isAddWindow) {\n        if (this.props.selectedItem != null) {\n          const value = this.props.isEditWindow;\n          this.props.changeEditWindow(!value);\n        } else {\n          alert(\"You did not choose genre!\");\n        }\n      } else {\n        alert(\"You have opened add window\");\n      }\n    };\n\n    this.onDeleteButtonClick = async event => {\n      event.preventDefault();\n\n      if (this.props.selectedItem != null) {\n        await this.props.libraryService.deleteGenre(this.props.selectedItem);\n        this.props.onRequest();\n        this.getAllGenres();\n      } else {\n        alert(\"You did not choose genre!\");\n      }\n    };\n\n    this.addGenre = async event => {\n      event.preventDefault();\n      const genre = {\n        name: this.props.addGenreField\n      };\n      await this.props.libraryService.addGenre(genre);\n      this.props.onRequest();\n      this.getAllGenres();\n    };\n\n    this.editGenre = async event => {\n      event.preventDefault();\n      const genre = {\n        id: this.props.selectedItem,\n        name: this.props.editGenreField\n      };\n      await this.props.libraryService.editGenre(genre);\n      this.props.onRequest();\n      this.getAllGenres();\n    };\n\n    this.selectedRow = (id, text) => {\n      const item = {\n        id,\n        text\n      };\n      this.props.onItemChange(item);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRequest();\n    this.getAllGenres();\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/authorization\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.props.loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const rows = this.props.genres.map(({\n      id,\n      name\n    }) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"object_id\",\n        className: \"\",\n        value: id,\n        onClick: () => {\n          this.selectedRow(id, name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, name));\n    });\n    const addWindow = !this.props.isAddWindow ? null : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-genre-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-form d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write new genre here...\",\n      className: \"form-control d-inline-block form-label\",\n      onChange: this.onAddGenreChange,\n      value: this.props.addGenreField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-info form-button mt-0 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, \"Add\")))));\n    const editWindow = !this.props.isEditWindow ? null : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"edit-genre-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.editGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-form d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write new genre here...\",\n      className: \"form-control d-inline-block form-label\",\n      onChange: this.onEditGenreChange,\n      value: this.props.editGenreField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-info form-button mt-0 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"Update\")))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      role: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container genres-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger float-right my-1 item-control\",\n      onClick: this.onDeleteButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-warning float-right my-1 item-control\",\n      onClick: this.onEditButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success float-right my-1 item-control\",\n      onClick: this.onAddButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }), addWindow, editWindow, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, rows)))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  genresList,\n  authorizationBlock\n}) => {\n  return {\n    isLoggedIn: authorizationBlock.isLoggedIn,\n    genres: genresList.genres,\n    loading: genresList.loading,\n    error: genresList.error,\n    isAddWindow: genresList.isAddWindow,\n    isEditWindow: genresList.isEditWindow,\n    addGenreField: genresList.addGenreField,\n    editGenreField: genresList.editGenreField,\n    selectedItem: genresList.selectedItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRequest: () => {\n      dispatch(genresRequested());\n    },\n    onLoaded: newGenres => {\n      dispatch(genresLoaded(newGenres));\n    },\n    changeAddWindow: value => {\n      dispatch(genreShowAddWindow(value));\n    },\n    changeEditWindow: value => {\n      dispatch(genreShowEditWindow(value));\n    },\n    onAddFieldChange: value => {\n      dispatch(genreUpdateAddField(value));\n    },\n    onEditFieldChange: value => {\n      dispatch(genreUpdateEditField(value));\n    },\n    onItemChange: item => {\n      dispatch(genreUpdateSelectedItem(item));\n    }\n  };\n};\n\nexport default compose(withLibraryService(), connect(mapStateToProps, mapDispatchToProps))(GenresPage);","map":{"version":3,"sources":["D:/libraryservice/frontpages/src/components/genres-page/genres-page.js"],"names":["React","Component","Header","Spinner","Redirect","compose","connect","withLibraryService","genresRequested","genresLoaded","genreShowAddWindow","genreShowEditWindow","genreUpdateAddField","genreUpdateEditField","genreUpdateSelectedItem","GenresPage","state","formError","addGenre","editGenre","isAddGenreError","isEditGenreError","regExpEng","RegExp","regExpRus","getAllGenres","libraryService","props","genres","onLoaded","onAddGenreChange","event","preventDefault","isErrorEng","test","target","value","isErrorRus","setState","onAddFieldChange","onEditGenreChange","onEditFieldChange","onAddButtonClick","isEditWindow","isAddWindow","changeAddWindow","alert","onEditButtonClick","selectedItem","changeEditWindow","onDeleteButtonClick","deleteGenre","onRequest","genre","name","addGenreField","id","editGenreField","selectedRow","text","item","onItemChange","componentDidMount","render","isLoggedIn","loading","rows","map","addWindow","editWindow","mapStateToProps","genresList","authorizationBlock","error","mapDispatchToProps","dispatch","newGenres"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './genres-page.css';\r\n\r\nimport Header from '../header';\r\nimport Spinner from '../spinner';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {compose} from \"../../utils\";\r\nimport {connect} from \"react-redux\";\r\nimport withLibraryService from \"../../hoc\";\r\nimport {genresRequested,\r\n        genresLoaded,\r\n        genreShowAddWindow,\r\n        genreShowEditWindow,\r\n        genreUpdateAddField,\r\n        genreUpdateEditField,\r\n        genreUpdateSelectedItem} from \"../../actions/genres-actions\";\r\n\r\nclass GenresPage extends Component{\r\n\r\n    // necessary for error handling and pointless, in my opinion, for rendering to the global state\r\n    state = {\r\n        formError : {\r\n            addGenre : \"\",\r\n            editGenre : \"\",\r\n        },\r\n        isAddGenreError : false,\r\n        isEditGenreError : false\r\n    };\r\n\r\n    regExpEng = new RegExp('^[A-Z][a-z]+$');\r\n    regExpRus = new RegExp('^[А-Я][а-я]+$');\r\n\r\n    componentDidMount() {\r\n        this.props.onRequest();\r\n        this.getAllGenres();\r\n    }\r\n\r\n    getAllGenres  = async () => {\r\n        const {libraryService} = this.props;\r\n        const genres = await libraryService.getAllGenres();\r\n        this.props.onLoaded(genres);\r\n    };\r\n\r\n    onAddGenreChange = event => {\r\n        event.preventDefault();\r\n        const isErrorEng = !this.regExpEng.test(event.target.value);\r\n        const isErrorRus = !this.regExpRus.test(event.target.value);\r\n        if(isErrorEng || isErrorRus) {\r\n            this.setState({\r\n                formError : {\r\n                    addGenre : \"The genre must start with a capital letter and not contain numbers or punctuation marks. Example: romance.\"\r\n                },\r\n                isAddGenreError : true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                formError : {\r\n                    addGenre : \"\"\r\n                },\r\n                isAddGenreError : false\r\n            });\r\n            this.props.onAddFieldChange(event.target.value);\r\n        }\r\n    };\r\n\r\n    onEditGenreChange = event => {\r\n        event.preventDefault();\r\n        this.props.onEditFieldChange(event.target.value);\r\n    };\r\n\r\n    onAddButtonClick = async event => {\r\n        event.preventDefault();\r\n        if(!this.props.isEditWindow) {\r\n            const value = this.props.isAddWindow;\r\n            this.props.changeAddWindow(!value);\r\n        } else {\r\n            alert(\"You have opened edit window\");\r\n        }\r\n    };\r\n\r\n    onEditButtonClick = async event => {\r\n        event.preventDefault();\r\n        if(!this.props.isAddWindow) {\r\n            if (this.props.selectedItem != null) {\r\n                const value = this.props.isEditWindow;\r\n                this.props.changeEditWindow(!value);\r\n            } else {\r\n                alert(\"You did not choose genre!\");\r\n            }\r\n        } else {\r\n            alert(\"You have opened add window\");\r\n        }\r\n    };\r\n\r\n    onDeleteButtonClick = async event => {\r\n        event.preventDefault();\r\n\r\n\r\n        if (this.props.selectedItem != null) {\r\n            await this.props.libraryService.deleteGenre(this.props.selectedItem);\r\n            this.props.onRequest();\r\n            this.getAllGenres();\r\n        } else {\r\n            alert(\"You did not choose genre!\");\r\n        }\r\n    };\r\n\r\n    addGenre = async event => {\r\n        event.preventDefault();\r\n\r\n        const genre = {\r\n            name : this.props.addGenreField\r\n        };\r\n\r\n        await this.props.libraryService.addGenre(genre);\r\n        this.props.onRequest();\r\n        this.getAllGenres();\r\n    };\r\n\r\n   editGenre = async event => {\r\n        event.preventDefault();\r\n\r\n        const genre = {\r\n            id: this.props.selectedItem,\r\n            name: this.props.editGenreField\r\n        };\r\n\r\n        await this.props.libraryService.editGenre(genre);\r\n        this.props.onRequest();\r\n        this.getAllGenres();\r\n    };\r\n\r\n    selectedRow = (id, text) => {\r\n        const item = {\r\n            id, text\r\n        };\r\n        this.props.onItemChange(item);\r\n    };\r\n\r\n    render () {\r\n\r\n        if(!this.props.isLoggedIn) {\r\n            return <Redirect to='/authorization'/>\r\n        }\r\n\r\n        if(this.props.loading) {\r\n            return <Spinner/>\r\n        }\r\n\r\n        const rows = this.props.genres.map(({id, name}) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td><input type=\"radio\" name=\"object_id\" className=\"\" value={id} onClick={() => {this.selectedRow(id, name)}}/></td>\r\n                    <td>{name}</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        const addWindow  = !this.props.isAddWindow ? null :\r\n            <div id=\"add-genre-block\">\r\n                <div className=\"card card-body mb-2\">\r\n                    <form onSubmit={this.addGenre}>\r\n                        <div className=\"genre-form d-flex\">\r\n                            <input type=\"text\" placeholder=\"Write new genre here...\" className=\"form-control d-inline-block form-label\" onChange={this.onAddGenreChange} value={this.props.addGenreField}/>\r\n                            <button type=\"submit\" className=\"btn btn-info form-button mt-0 ml-2\">Add</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>;\r\n\r\n        const editWindow = !this.props.isEditWindow ? null :\r\n            <div id=\"edit-genre-block\">\r\n                <div className=\"card card-body\">\r\n                    <form onSubmit={this.editGenre}>\r\n                        <div className=\"genre-form d-flex\">\r\n                            <input type=\"text\" placeholder=\"Write new genre here...\" className=\"form-control d-inline-block form-label\" onChange={this.onEditGenreChange} value={this.props.editGenreField}/>\r\n                            <button type=\"submit\" className=\"btn btn-info form-button mt-0 ml-2\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>;\r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n\r\n                <main role=\"main\">\r\n\r\n                    <div className=\"container genres-page\">\r\n                        <h1>Genres</h1>\r\n\r\n                        <div className=\"genres-tools\">\r\n                            <button className=\"btn btn-outline-danger float-right my-1 item-control\" onClick={this.onDeleteButtonClick}>\r\n                                <i className=\"fa fa-trash-o\"/>\r\n                            </button>\r\n\r\n                            <button className=\"btn btn-outline-warning float-right my-1 item-control\" onClick={this.onEditButtonClick}>\r\n                                <i className=\"fa fa-pencil\"/>\r\n                            </button>\r\n\r\n                            <button className=\"btn btn-outline-success float-right my-1 item-control\" onClick={this.onAddButtonClick}>\r\n                                <i className=\"fa fa-plus\"/>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <br/>\r\n\r\n                        {addWindow}\r\n\r\n                        {editWindow}\r\n\r\n                        <table className=\"table mt-2\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({genresList, authorizationBlock}) => {\r\n    return {\r\n        isLoggedIn : authorizationBlock.isLoggedIn,\r\n        genres : genresList.genres,\r\n        loading : genresList.loading,\r\n        error : genresList.error,\r\n        isAddWindow :genresList.isAddWindow,\r\n        isEditWindow : genresList.isEditWindow,\r\n        addGenreField : genresList.addGenreField,\r\n        editGenreField: genresList.editGenreField,\r\n        selectedItem: genresList.selectedItem\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onRequest : () => {dispatch(genresRequested())},\r\n        onLoaded : (newGenres) => {dispatch(genresLoaded(newGenres))},\r\n        changeAddWindow : (value) => {dispatch(genreShowAddWindow(value))},\r\n        changeEditWindow : (value) => {dispatch(genreShowEditWindow(value))},\r\n        onAddFieldChange : (value) => {dispatch(genreUpdateAddField(value))},\r\n        onEditFieldChange : (value) => {dispatch(genreUpdateEditField(value))},\r\n        onItemChange : (item) => {dispatch(genreUpdateSelectedItem(item))}\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withLibraryService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n    )(GenresPage);"]},"metadata":{},"sourceType":"module"}